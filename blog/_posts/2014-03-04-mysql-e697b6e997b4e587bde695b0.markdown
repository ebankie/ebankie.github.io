---
author: ebankie
comments: true
date: 2014-03-04 03:08:30+00:00
layout: post
link: http://www.ebankie.com/blog/?p=121
slug: mysql-%e6%97%b6%e9%97%b4%e5%87%bd%e6%95%b0
title: mysql 时间函数
wordpress_id: 121
categories:
- 技术文章
tags:
- mysql
- 函数
- 日期
---

[well]

在工作中遇到sql语句时间对比问题，查了好多时间函数，正好总结一下：

1,　ADDDAYE (expr,days) _expr_, _days为整数值DATE_ADD()为相同功能函数，ADDTIME(__expr_,_expr2__)为增加 h,i,s_

**SELECT ADDDATE('1998-01-02', 31);**

-> '1998-02-02'

2,CURDATE() 返回当前日期　具体格式根据函数用在字符串或是数字语境中而定

mysql> **SELECT CURDATE();**

-> '1997-12-15'

mysql> **SELECT CURDATE() + 0;**

-> 19971215

3,CURTIME() 　将当前时间以'HH:MM:SS'或 HHMMSS 的格式返回， 具体格式根据函数用在字符串或是数字语境中而定

4，DATE(_expr_)

提取日期或时间日期表达式_expr_中的日期部分。

mysql> **SELECT DATE('2003-12-31 01:02:03');**

-> '2003-12-31'

5，DATEDIFF(_expr_,_expr2_)

DATEDIFF() 返回起始时间 _expr_和结束时间_expr2_之间的天数。_Expr_和_expr2_ 为日期或 date-and-time 表达式。计算中只用到这些值的日期部分。

mysql> **SELECT DATEDIFF('1997-12-31 23:59:59','1997-12-30');**

-> 1

mysql> **SELECT DATEDIFF('1997-11-30 23:59:59','1997-12-31');**

-> -31

6，DATE_FORMAT(_date_,_format_) 根据_format_ 字符串安排_date_ 值的格式。

但是传字段参数时不是很好用，特别是_int类型转换成null，而from_unixtime是OK的_

以下说明符可用在 _format_ 字符串中：
<table cellpadding="0" width="531" border="1" >
<tbody >
<tr >

<td width="59" >**说明符**
</td>

<td >**说明**
</td>
</tr>
<tr >

<td width="59" >%a
</td>

<td >工作日的缩写名称  (Sun..Sat)
</td>
</tr>
<tr >

<td width="59" >%b
</td>

<td >月份的缩写名称  (Jan..Dec)
</td>
</tr>
<tr >

<td width="59" >%c
</td>

<td >月份，数字形式(0..12)
</td>
</tr>
<tr >

<td width="59" >%D
</td>

<td >带有英语后缀的该月日期  (0th, 1st, 2nd, 3rd, ...)
</td>
</tr>
<tr >

<td width="59" >%d
</td>

<td >该月日期, 数字形式 (00..31)
</td>
</tr>
<tr >

<td width="59" >%e
</td>

<td >该月日期, 数字形式(0..31)
</td>
</tr>
<tr >

<td width="59" >%f
</td>

<td >微秒 (000000..999999)
</td>
</tr>
<tr >

<td width="59" >%H
</td>

<td >小时(00..23)
</td>
</tr>
<tr >

<td width="59" >%h
</td>

<td >小时(01..12)
</td>
</tr>
<tr >

<td width="59" >%I
</td>

<td >小时 (01..12)
</td>
</tr>
<tr >

<td width="59" >%i
</td>

<td >分钟,数字形式 (00..59)
</td>
</tr>
<tr >

<td width="59" >%j
</td>

<td >一年中的天数 (001..366)
</td>
</tr>
<tr >

<td width="59" >%k
</td>

<td >小时 (0..23)
</td>
</tr>
<tr >

<td width="59" >%l
</td>

<td >小时 (1..12)
</td>
</tr>
<tr >

<td width="59" >%M
</td>

<td >月份名称 (January..December)
</td>
</tr>
<tr >

<td width="59" >%m
</td>

<td >月份, 数字形式 (00..12)
</td>
</tr>
<tr >

<td width="59" >%p
</td>

<td >上午（AM）或下午（ PM）
</td>
</tr>
<tr >

<td width="59" >%r
</td>

<td >时间 , 12小时制 (小时hh:分钟mm:秒数ss 后加 AM或PM)
</td>
</tr>
<tr >

<td width="59" >%S
</td>

<td >秒 (00..59)
</td>
</tr>
<tr >

<td width="59" >%s
</td>

<td >秒 (00..59)
</td>
</tr>
<tr >

<td width="59" >%T
</td>

<td >时间 , 24小时制 (小时hh:分钟mm:秒数ss)
</td>
</tr>
<tr >

<td width="59" >%U
</td>

<td >周 (00..53), 其中周日为每周的第一天
</td>
</tr>
<tr >

<td width="59" >%u
</td>

<td >周 (00..53), 其中周一为每周的第一天
</td>
</tr>
<tr >

<td width="59" >%V
</td>

<td >周 (01..53), 其中周日为每周的第一天 ; 和 %X同时使用
</td>
</tr>
<tr >

<td width="59" >%v
</td>

<td >周 (01..53), 其中周一为每周的第一天 ; 和 %x同时使用
</td>
</tr>
<tr >

<td width="59" >%W
</td>

<td >工作日名称 (周日..周六)
</td>
</tr>
<tr >

<td width="59" >%w
</td>

<td >一周中的每日 (0=周日..6=周六)
</td>
</tr>
<tr >

<td width="59" >%X
</td>

<td >该周的年份，其中周日为每周的第一天, 数字形式,4位数;和%V同时使用
</td>
</tr>
<tr >

<td width="59" >%x
</td>

<td >该周的年份，其中周一为每周的第一天, 数字形式,4位数;和%v同时使用
</td>
</tr>
<tr >

<td width="59" >%Y
</td>

<td >年份, 数字形式,4位数
</td>
</tr>
<tr >

<td width="59" >%y
</td>

<td >年份, 数字形式 (2位数)
</td>
</tr>
<tr >

<td width="59" >%%
</td>

<td >‘%’文字字符
</td>
</tr>
</tbody>
</table>
所有其它字符都被复制到结果中，无需作出解释。

注意， ‘%’字符要求在格式指定符之前。

月份和日期说明符的范围从零开始，原因是 MySQL允许存储诸如 '2004-00-00'的不完全日期.

    
    mysql> <b>SELECT DATE_FORMAT('1997-10-04 22:23:00', '%W %M %Y');</b>



    
            -> 'Saturday October 1997'
    7,
    <ul>
    	<li style="display: inline !important;">DAY(<i>date</i>)返回<i>date</i> 对应的工作日名称</li>
    </ul>
    


**SELECT DAYNAME('1998-02-05');**

-> '周四'

8，DAYOFMONTH(_date_)  返回_date_ 对应的该月日期，范围是从 1到31。既提取相应 哪天

9,DAYOFWEEK(date）同上返回工作日期 (1 = 周日, 2 = 周一, ..., 7 = 周六)对应的工作日索引

10，DAYOFYEAR(_date_)返回_date_ 对应的一年中的天数，范围是从 1到366。

mysql> **SELECT DAYOFYEAR('1998-02-03');**

-> 34

11，FROM_UNIXTIME(_unix_timestamp_) , FROM_UNIXTIME(_unix_timestamp_,_format_)

返回'YYYY-MM-DD HH:MM:SS'或YYYYMMDDHHMMSS 格式值的_unix_timestamp_参数表示，具体格式取决于该函数是否用在字符串中或是数字语境中。

若_format_ 已经给出，则结果的格式是根据_format_ 字符串而定。 _format_ 可以包含同DATE_FORMAT() 函数输入项列表中相同的说明符。

mysql> **SELECT FROM_UNIXTIME(875996580);**

-> '1997-10-04 22:23:00'

mysql> **SELECT FROM_UNIXTIME(875996580) + 0;**

-> 19971004222300

mysql> **SELECT FROM_UNIXTIME(UNIX_TIMESTAMP(),**

->                      **'%Y %D %M %h:%i:%s %x');**

-> '2003 6th August 06:22:58 2003'

[/well]

[well]

常用日期函数 例如时间比较：data_add ().datediff(),data_sub().,时间格式化函数，date_format(),from_unixtime()

[/well]
